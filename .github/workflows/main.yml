# .github/workflows/release.yml
name: Tag → Release → Docker (beta on main, prod on release)

on:
  push:
    branches: [ main, release ]
  workflow_dispatch:

permissions:
  contents: write   # needed to create tags & releases

jobs:
  tag_build_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Compute and create the next version tag
      - name: Auto-bump & tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # Your branch roles:
          pre_release_branches: main         # treat `main` as the beta stream
          release_branches: release          # treat `release` as production
          append_to_pre_release_tag: beta    # v1.5.0-beta.0, v1.5.0-beta.1, ...
          # First beta of a new line: choose ONE default.
          # - preminor → 1.(x+1).0-beta.0 for feature cycles
          # - prepatch → 1.x.(y+1)-beta.0 for hotfix cycles
          default_prerelease_bump: preminor

      # Skip the rest if nothing to release (e.g. docs-only and default_bump=false)
      - name: Stop if no new tag
        if: ${{ steps.tag.outputs.new_tag == '' }}
        run: echo "No version bump on this push."

      # 2) Create a GitHub Release (marked prerelease for beta tags)
      - name: Publish GitHub Release
        if: ${{ steps.tag.outputs.new_tag != '' }}
        uses: ncipollo/release-action@v1
        with:
          tag:  ${{ steps.tag.outputs.new_tag }}
          name: Release ${{ steps.tag.outputs.new_tag }}
          body: ${{ steps.tag.outputs.changelog }}
          prerelease: ${{ contains(steps.tag.outputs.new_tag, '-beta.') }}

      # 3) Docker login (Docker Hub)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      # 4) Decide image tags for beta vs prod
      - name: Compute Docker tags
        id: imgtags
        run: |
          IMAGE="russellotniel/personal-repository"
          TAG="${{ steps.tag.outputs.new_tag }}"     # e.g. v1.5.0-beta.2 or v1.5.0
          # Publish with the exact tag
          echo "primary=${IMAGE}:${TAG}" >> $GITHUB_OUTPUT
          # Also publish without the leading 'v'
          echo "nov=${IMAGE}:${TAG#v}" >> $GITHUB_OUTPUT
          # And a channel tag: latest-beta for prereleases, latest for finals
          if [[ "$TAG" == *"-beta."* ]]; then
            echo "channel=${IMAGE}:latest-beta" >> $GITHUB_OUTPUT
          else
            echo "channel=${IMAGE}:latest" >> $GITHUB_OUTPUT
          fi

      # 5) Build & push
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Uncomment platforms below to publish multi-arch images
          # platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.imgtags.outputs.primary }}
            ${{ steps.imgtags.outputs.nov }}
            ${{ steps.imgtags.outputs.channel }}
