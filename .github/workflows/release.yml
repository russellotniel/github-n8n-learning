# .github/workflows/release.yml
name: Release (beta on main, prod on release)

on:
  push:
    branches: [ main, release ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  plan:
    name: Plan next version
    runs-on: ubuntu-latest
    outputs:
      next_tag: ${{ steps.plan.outputs.new_tag }}
      prerelease: ${{ steps.flags.outputs.prerelease }}
      has_tag: ${{ steps.flags.outputs.has_tag }}
    steps:
      - uses: actions/checkout@v4

      - id: plan
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_branches: main
          release_branches: release
          append_to_pre_release_tag: beta
          default_prerelease_bump: preminor
          tag_prefix: 'v'          # keep consistent in all steps
          dry_run: true            # plan only (no tag yet)

      - id: flags
        run: |
          tag="${{ steps.plan.outputs.new_tag }}"
          if [ -n "$tag" ]; then echo "has_tag=true" >> $GITHUB_OUTPUT; else echo "has_tag=false" >> $GITHUB_OUTPUT; fi
          if [[ "$tag" == *"-beta."* ]]; then echo "prerelease=true" >> $GITHUB_OUTPUT; else echo "prerelease=false" >> $GITHUB_OUTPUT; fi

  build:
    name: Build (no publish)
    needs: plan
    if: needs.plan.outputs.has_tag == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # TODO: add container smoke tests here if you have them

  finalize:
    name: Tag, Release & Push
    needs: [plan, build]
    if: needs.plan.outputs.has_tag == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Re-plan to ensure determinism, then compare with the earlier plan
      - id: plan_again
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_branches: main
          release_branches: release
          append_to_pre_release_tag: beta
          default_prerelease_bump: preminor
          tag_prefix: 'v'
          dry_run: true

      - name: Assert planned vs re-planned
        run: test "${{ needs.plan.outputs.next_tag }}" = "${{ steps.plan_again.outputs.new_tag }}"

      # Create the real tag now that build passed
      - id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_branches: main
          release_branches: release
          append_to_pre_release_tag: beta
          default_prerelease_bump: preminor
          tag_prefix: 'v'

      - name: Stop if tag was not created (nothing to release)
        if: ${{ steps.tag.outputs.new_tag == '' }}
        run: echo "No new tag created. Exiting." && exit 0

      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag:  ${{ steps.tag.outputs.new_tag }}
          name: Release ${{ steps.tag.outputs.new_tag }}
          body: ${{ steps.tag.outputs.changelog }}
          prerelease: ${{ needs.plan.outputs.prerelease }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      # Compute image tags: keep 'v' tag, also a no-'v' tag, plus channel tag
      - name: Compute Docker tags
        id: imgtags
        run: |
          IMAGE="russellotniel/personal-repository"
          TAG="${{ steps.tag.outputs.new_tag }}"   # e.g. v1.6.0-beta.2 or v1.6.0
          echo "primary=${IMAGE}:${TAG}" >> $GITHUB_OUTPUT
          if [[ "$TAG" == v* ]]; then
            echo "nov=${IMAGE}:${TAG:1}" >> $GITHUB_OUTPUT
          else
            echo "nov=${IMAGE}:${TAG}" >> $GITHUB_OUTPUT
          fi
          if [[ "$TAG" == *"-beta."* ]]; then
            echo "channel=${IMAGE}:latest-beta" >> $GITHUB_OUTPUT
          else
            echo "channel=${IMAGE}:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build & push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64   # ‚Üê uncomment for multi-arch
          tags: |
            ${{ steps.imgtags.outputs.primary }}
            ${{ steps.imgtags.outputs.nov }}
            ${{ steps.imgtags.outputs.channel }}
