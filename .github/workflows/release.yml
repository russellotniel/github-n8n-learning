name: Release (beta on main, prod on release) - Hybrid

on:
  pull_request:
    branches: [ main ]
    types: [closed]
  push:
    branches: [ release ]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Note: Docker build validation is handled in CI workflow (ci.yml)
  # This release workflow focuses on tagging and production deployment only
  tag:
    name: Create version tag
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/release') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Run auto-tagging script
        run: npx tsx scripts/auto-tag.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Build, push Docker image and create release
    runs-on: ubuntu-latest
    needs: tag
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      
      - name: Get latest tag
        id: get_tag
        run: |
          echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            russellotniel/personal-repository:${{ steps.get_tag.outputs.tag }}
      
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          generateReleaseNotes: true
          draft: false
          prerelease: false
      
      - name: Verify deployment
        run: |
          echo "Deployment completed for tag: ${{ steps.get_tag.outputs.tag }}"
          echo "Docker image: russellotniel/personal-repository:${{ steps.get_tag.outputs.tag }}"
          # Add health check commands here when you have a deployed service
          # curl -f https://your-app.com/health || exit 1
      
      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful for ${{ steps.get_tag.outputs.tag }}"
          else
            echo "❌ Deployment failed for ${{ steps.get_tag.outputs.tag }}"
          fi
